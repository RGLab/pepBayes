% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/AllMethods.R
\docType{methods}
\name{pepBayesEcm}
\alias{pepBayesEcm}
\alias{pepBayesEcm,pepBayesFit-method}
\alias{pepBayesEcm,peptideSet-method}
\title{Posterior maximization for pepBayes models.}
\usage{
pepBayesEcm(x, ...)

\S4method{pepBayesEcm}{peptideSet}(x, position_data = NULL,
  control_id = NULL, n_iter = 30, n_threads = 1, n_rule = 10,
  n_isamp = 20, prior_control_list = NULL, iter_control_list = NULL,
  schedule_iterations = TRUE)

\S4method{pepBayesEcm}{pepBayesFit}(x, n_iter, n_threads = 1, n_rule = 10,
  n_isamp = 20, schedule_iterations = FALSE, join_output = TRUE)
}
\arguments{
\item{x}{A pepBayesFit or peptideSet object containing experiment data.}

\item{...}{Additional arguments for sampling control.}

\item{position_data}{A data.frame or GRanges object with peptide position
information.}

\item{n_iter}{The number of EM iterations to perform.}

\item{n_threads}{The number of parallel threads to use in the E-step.}

\item{n_rule}{The number of nodes to use for Gauss-Hermite numerical integration.}

\item{n_isamp}{The number of importance samples to estimate the E-step.}

\item{prior_control_list}{A named list controlling initial parameter values.}

\item{iter_control_list}{A named list controlling which parameters are updated.}

\item{schedule_iterations}{A boolean. Should the number of importance samples
gradually increase to \code{n_isamp} as iterations progress?}

\item{join_output}{A boolean. Should input be merged with output?}
}
\value{
An object of type \link{pepBayesFit} containing sorted slide metadata,
 parameter trace, posterior probabilities of binding, and
 iteration information.
}
\description{
Maximize the posterior distribution of pepBayes models. The generic
function has methods for \link{peptideSet} objects and for \link{pepBayesFit}
objects for restarting an optimization from its last position.
}
\details{
PepBayes estimates the posterior probability of
a differential antibody response against each peptide in a peptide microarray
assay, for each subject,
when compared with control samples. Two common experimental designs are automatically
detected. In an unpaired design, differences between a population of interest and
a control population are detected. A paired design has matched samples for each subject
before and after a treatment is applied. The function \code{pepBayesEcm}
automatically detects the experimental design from the data.

When \code{x} is a \code{peptideSet} object, the paired or unpaired model is
chosen depending on the 'ptid' column of \code{pData(x)}. Paired data is detected
when each unique value of 'ptid' appears exactly twice among all slides.

The \code{position_data} argument supplies information about peptide position
information. This argument may be a 'data.frame' with columns 'start',
'end' or 'width', and 'peptide'. If a 'GRanges' object, then it must have either peptide
as a name or have peptide as a metadata column. Response probability hyperparamters are
fixed for EM estimation, but if position data are omitted (\code{position_data = NULL}),
they will also be fixed if the resulting fitted object is used to initialize a
\code{pepBayesMcmc}.

When \code{x} is a pepBayesFit object, the optimization is started from the most
recent parameter values in the fitted object. In the event that \code{x} is
the output of a previous ECM fit, the argument \code{join_output} becomes
relevant. If \code{TRUE}, parameter traces are appended to those in \code{x}.
}
\seealso{
\code{\link{pepBayesFit}}
\code{\link{pepBayesFit-methods}}
\code{\link{peptideSet}}
\code{\link{pepBayesMcmc}}
\code{\link{pepBayesCalls}}
}

